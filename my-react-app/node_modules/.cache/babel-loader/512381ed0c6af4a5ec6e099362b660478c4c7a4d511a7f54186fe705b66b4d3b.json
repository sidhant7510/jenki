{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TodoApp=()=>{const[title,setTitle]=useState('');// State to handle the input\nconst[todos,setTodos]=useState([]);// State to handle the list of todos\n// Get the API URL from the environment variables\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';// Default to localhost if not set\n// Fetch existing todos from the backend when the component is mounted\nuseEffect(()=>{fetchTodos();},[]);const fetchTodos=async()=>{try{const response=await axios.get(`${API_URL}/todos`);setTodos(response.data);}catch(error){console.error('Error fetching todos:',error);}};const handleAddTodo=async()=>{if(!title){return;// Don't proceed if the title is empty\n}try{const response=await axios.post(`${API_URL}/todos`,{title});setTodos([...todos,response.data]);// Add the new todo to the list\nsetTitle('');// Clear the input field\n}catch(error){console.error('Error adding todo:',error);}};const handleDeleteTodo=async id=>{try{await axios.delete(`${API_URL}/todos/${id}`);setTodos(todos.filter(todo=>todo.id!==id));// Remove the deleted todo from the list\n}catch(error){console.error('Error deleting todo:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Todo App\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),placeholder:\"Enter todo title\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTodo,children:\"Add Todo\"}),/*#__PURE__*/_jsx(\"ul\",{children:todos.map(todo=>/*#__PURE__*/_jsxs(\"li\",{children:[todo.title,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteTodo(todo.id),children:\"Delete\"})]},todo.id))})]});};export default TodoApp;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TodoApp","title","setTitle","todos","setTodos","API_URL","process","env","REACT_APP_API_URL","fetchTodos","response","get","data","error","console","handleAddTodo","post","handleDeleteTodo","id","delete","filter","todo","children","type","value","onChange","e","target","placeholder","onClick","map"],"sources":["/var/www/html/3-tier-todo/my-react-app/src/components/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TodoApp = () => {\n  const [title, setTitle] = useState(''); // State to handle the input\n  const [todos, setTodos] = useState([]); // State to handle the list of todos\n\n  // Get the API URL from the environment variables\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000'; // Default to localhost if not set\n\n  // Fetch existing todos from the backend when the component is mounted\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/todos`);\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const handleAddTodo = async () => {\n    if (!title) {\n      return; // Don't proceed if the title is empty\n    }\n\n    try {\n      const response = await axios.post(`${API_URL}/todos`, { title });\n      setTodos([...todos, response.data]); // Add the new todo to the list\n      setTitle(''); // Clear the input field\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/todos/${id}`);\n      setTodos(todos.filter(todo => todo.id !== id)); // Remove the deleted todo from the list\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Todo App</h1>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Enter todo title\"\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.title}\n            <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}